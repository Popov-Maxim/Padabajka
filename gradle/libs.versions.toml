[versions]
agp = "8.2.2"
kotlin = "1.9.22"
kotlinx-datetime = "0.5.0"
kotlinx-serialization = "1.6.3"
google-services = "4.4.1"
coroutines = "1.8.0"
compose = "1.6.2"
compose-compiler = "1.5.10"
compose-material3 = "1.2.0"
androidx-activityCompose = "1.8.2"
androidx-test-ext-junit = "1.1.5"
compose-plugin = "1.5.12"
decompose = "2.2.2"
decompose-extention = "2.2.2-compose-experimental"
org-jetbrains-kotlin-jvm = "1.9.22"
detekt = "1.23.3"
koin = "3.5.3"
firebase = "32.7.3"
gitlive-firebase = "1.11.1"
datastore = "1.1.0-beta02"
mmutable-collections = "0.3.7"
mockmp = "1.17.0"
espresso-core = "3.5.1"
firebaseAuth = "22.3.1"
yandex-ads = "6.4.1"
projectConfig-minSdk = "24"
projectConfig-compileSdk = "34"
projectConfig-targetSdk = "34"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose-extention" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt"}
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
gitlive-firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "gitlive-firebase"}
datastore = { module = "androidx.datastore:datastore-preferences-core", version.ref = "datastore" }
immutable-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "mmutable-collections" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
firebase-auth = { group = "com.google.firebase", name = "firebase-auth", version.ref = "firebaseAuth" }
google-services = { group = "com.google.gms", name = "google-services", version.ref = "google-services" }
yandex-ads = { module = "com.yandex.android:mobileads", version.ref = "yandex-ads" }

[plugins]
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "org-jetbrains-kotlin-jvm" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
mockmp = { id = "org.kodein.mock.mockmp", version.ref = "mockmp" }
